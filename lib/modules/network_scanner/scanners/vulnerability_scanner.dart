import 'package:zentry/modules/network_scanner/models/vulnerability.dart';

class VulnerabilityScanner {
  List<Vulnerability> analyze(String ip, List<int> openPorts) {
    List<Vulnerability> vulnerabilities = [];

    for (final port in openPorts) {
      if (port == 7) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'Echo protocol detected - potential misuse',
          severity: 'low',
        ));
      } else if (port == 21) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'Unencrypted FTP service',
          severity: 'high',
        ));
      } else if (port == 22) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'SSH service detected - check for weak credentials',
          severity: 'medium',
        ));
      } else if (port == 23) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'Exposed Telnet service',
          severity: 'high',
        ));
      } else if (port == 25) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'SMTP server detected - check for open relay',
          severity: 'medium',
        ));
      } else if (port == 53) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'DNS service detected - potential DNS poisoning',
          severity: 'medium',
        ));
      } else if (port == 80) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'HTTP service detected - check for outdated software',
          severity: 'medium',
        ));
      } else if (port == 110) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'POP3 service detected - unencrypted email retrieval',
          severity: 'medium',
        ));
      } else if (port == 139) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'NetBIOS service detected - possible information leak',
          severity: 'medium',
        ));
      } else if (port == 143) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'IMAP service detected - check for unencrypted access',
          severity: 'medium',
        ));
      } else if (port == 443) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description:
              'HTTPS service detected - check for weak TLS configuration',
          severity: 'medium',
        ));
      } else if (port == 445) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description: 'Exposed SMB service - potential remote code execution',
          severity: 'critical',
        ));
      } else if (port == 554) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description:
              'RTSP service detected - possible media streaming vulnerabilities',
          severity: 'medium',
        ));
      } else if (port == 8000 || port == 8080) {
        vulnerabilities.add(Vulnerability(
          ip: ip,
          port: port,
          description:
              'HTTP alternative port detected - check for outdated software',
          severity: 'medium',
        ));
      }
    }

    return vulnerabilities;
  }
}
